/****************************************************************************
 *
 *   Copyright (C) 2013-2016 PX4 Development Team. All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 *
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in
 *    the documentation and/or other materials provided with the
 *    distribution.
 * 3. Neither the name PX4 nor the names of its contributors may be
 *    used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
 * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
 * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
 * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS
 * OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED
 * AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
 * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 *
 ****************************************************************************/

/* Auto-generated by genmsg_cpp from file debug_vect.msg */


#include <inttypes.h>
#include <px4_platform_common/log.h>
#include <px4_platform_common/defines.h>
#include <uORB/topics/debug_vect.h>
#include <uORB/topics/uORBTopics.hpp>
#include <drivers/drv_hrt.h>
#include <lib/drivers/device/Device.hpp>

constexpr char __orb_debug_vect_fields[] = "uint64_t timestamp;float x;float y;float z;float n;float o;float p;float q;float r;float u;float v;float w;float l;float m;float k;float j;float i;char[10] name;uint8_t[6] _padding0;";

ORB_DEFINE(debug_vect, struct debug_vect_s, 82, __orb_debug_vect_fields, static_cast<uint8_t>(ORB_ID::debug_vect));


void print_message(const debug_vect_s &message)
{

	PX4_INFO_RAW(" debug_vect_s\n");

	const hrt_abstime now = hrt_absolute_time();

	if (message.timestamp != 0) {
		PX4_INFO_RAW("\ttimestamp: %" PRIu64 "  (%.6f seconds ago)\n", message.timestamp, (now - message.timestamp) / 1e6);
	} else {
		PX4_INFO_RAW("\n");
	}
	PX4_INFO_RAW("\tx: %.4f\n", (double)message.x);
	PX4_INFO_RAW("\ty: %.4f\n", (double)message.y);
	PX4_INFO_RAW("\tz: %.4f\n", (double)message.z);
	PX4_INFO_RAW("\tn: %.4f\n", (double)message.n);
	PX4_INFO_RAW("\to: %.4f\n", (double)message.o);
	PX4_INFO_RAW("\tp: %.4f\n", (double)message.p);
	PX4_INFO_RAW("\tq: %.4f\n", (double)message.q);
	PX4_INFO_RAW("\tr: %.4f\n", (double)message.r);
	PX4_INFO_RAW("\tu: %.4f\n", (double)message.u);
	PX4_INFO_RAW("\tv: %.4f\n", (double)message.v);
	PX4_INFO_RAW("\tw: %.4f\n", (double)message.w);
	PX4_INFO_RAW("\tl: %.4f\n", (double)message.l);
	PX4_INFO_RAW("\tm: %.4f\n", (double)message.m);
	PX4_INFO_RAW("\tk: %.4f\n", (double)message.k);
	PX4_INFO_RAW("\tj: %.4f\n", (double)message.j);
	PX4_INFO_RAW("\ti: %.4f\n", (double)message.i);
	PX4_INFO_RAW("\tname: \"%.10s\" \n", message.name);
	
}
